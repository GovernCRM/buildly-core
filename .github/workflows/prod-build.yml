name: Build and Push Docker Image to Prod

on:
  push:
    branches:
      - prod

env:
  REGION: us
  IMAGE_NAME: ${{ vars.PROD_DOCKER_IMAGE }}

jobs:
  build:
    name: Build and Push image to GCR
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # # auto generate tag from label defined in Dockerfile
    # - uses: butlerlogic/action-autotag@1.1.2
    #   id: tag_version
    #   env:
    #     GITHUB_TOKEN: "${{ secrets.RELEASE_TOKEN }}"
    #   with:
    #     strategy: docker
    #     tag_prefix: "v"

    # # Create release notes
    # - name: Build changelog
    #   id: build_changelog
    #   uses: mikepenz/release-changelog-builder-action@main
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    # # Create release
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@latest
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    #   with:
    #     tag_name: ${{ steps.tag_version.outputs.tagname }}
    #     release_name: Release ${{ steps.tag_version.outputs.tagname }}
    #     body: ${{ steps.build_changelog.outputs.changelog }}
    #     draft: false
    #     prerelease: false

    - id: "auth"
      uses: "google-github-actions/auth@v1"
      with:
        credentials_json: "${{ secrets.PROD_GCR_JSON_KEY }}"

    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"

    - name: "Use gcloud CLI"
      run: "gcloud info"

    - name: "Docker auth"
      run: |-
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
    - name: Build docker image
      run: docker build -t $IMAGE_NAME:latest .
  
    - name: Push to Google Artifact Registry
      run: docker push $IMAGE_NAME:latest

    # # Send email alert
    # - name: Email Alert
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: smtp.gmail.com
    #     server_port: 465
    #     username: ${{ secrets.MAIL_USERNAME }}
    #     password: ${{ secrets.MAIL_PASSWORD }}
    #     subject: Github Actions Build and Push job alert
    #     to: ${{ secrets.RECIPIENT_EMAIL }}
    #     from: ${{ secrets.SENDER_EMAIL }}
    #     body: Production Docker Image of buildly core pushed to Google Container Registry Successfully

    - name: Deploy on Kapstan
      id: Kapstan
      uses: kapstan-io/deployment-action@latest
      with: 
        application_name: buidly-core
        image_repository_name: ${{ env.IMAGE_NAME }}
        image_tag: latest
        kapstan_api_key: ${{ secrets.PROD_KAPSTAN_KEY }}
        wait_for_deployment: false
